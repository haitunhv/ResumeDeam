<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/aop https://www.springframework.org/schema/aop/spring-aop.xsd">

    <context:property-placeholder location="db.properties"/>

<!--    数据源（druid）-->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
        <property name="driverClassName" value="${jdbc.driver}"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
    </bean>

<!--    创建sqlSessionFactory-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!-- 数据源-->
        <property name="dataSource" ref="dataSource"/>
        <!-- 包底下类自动设置别名(设置领域模型)-->
        <property name="typeAliasesPackage" value="com.haitunhv.domain"/>
        <!-- 映射文件的位置-->
        <property name="mapperLocations">
            <list>
                <value>mappers/*.xml</value>
            </list>
        </property>
    </bean>

<!--    扫描dao-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!-- 设置SqlSessionFactoryBean的id-->
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
        <!-- 设置dao的包-->
        <property name="basePackage" value="com.haitunhv.dao"/>
    </bean>
<!--    <bean id="processor" class="com.haitunhv.processor.LogProcessor"/>-->
<!--    <bean id="processor" class="com.haitunhv.processor.LogProcessor2"/>-->

    <bean id="personService" class="com.haitunhv.service.impl.PersonServiceImpl"/>

<!--    附加代码-->
<!--    <bean id="logAdvice" class="com.haitunhv.aop.LogAdvice"/>-->
    <bean class="com.haitunhv.aop.LogInterceptor" id="interceptor"/>
    <!-- 切面 -->
    <aop:config>
        <!-- 切入点：给那些类的哪些方法增加附加代码 -->
        <!-- execution(* *(..)) 代表所有类的所有方法都会被切入 -->
        <aop:pointcut id="pc" expression="execution(* *(..))"/>
        <!-- 附加代码 -->
        <aop:advisor advice-ref="interceptor" pointcut-ref="pc"/>
    </aop:config>
</beans>